"""Update donation model structure

Revision ID: 749a12d0fc47
Revises: 292edf065a1e
Create Date: 2025-09-28 23:35:37.666323

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel  # added

# revision identifiers, used by Alembic.
revision: str = '749a12d0fc47'
down_revision: Union[str, None] = '292edf065a1e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('donation', sa.Column('donation_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('donation', sa.Column('progress', sa.Integer(), nullable=False))
    op.alter_column('donation', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    # Use explicit cast for completion_date
    op.execute("ALTER TABLE donation ALTER COLUMN completion_date TYPE TIMESTAMP WITHOUT TIME ZONE USING completion_date::timestamp")
    op.drop_column('donation', 'amount')
    op.alter_column('need', 'sdgs',
               existing_type=postgresql.ARRAY(sa.INTEGER()),
               nullable=True)
    # keep profile.user_id as UUID to match user.id; do not alter to string
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('need', 'sdgs',
               existing_type=postgresql.ARRAY(sa.INTEGER()),
               nullable=False)
    op.add_column('donation', sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.execute("ALTER TABLE donation ALTER COLUMN completion_date TYPE VARCHAR")
    op.alter_column('donation', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('donation', 'progress')
    op.drop_column('donation', 'donation_type')
    # ### end Alembic commands ###
